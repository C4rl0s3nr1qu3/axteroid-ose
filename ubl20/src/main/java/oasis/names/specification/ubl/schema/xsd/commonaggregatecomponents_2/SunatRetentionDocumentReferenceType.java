//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.02.10 at 03:06:42 PM COT 
//


package oasis.names.specification.ubl.schema.xsd.commonaggregatecomponents_2;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import com.axteroid.ose.server.ubl20.gateway.request.MyNamespacePrefixMapper;

import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.CalculationRateType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.DateType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.IDType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.IssueDateType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.PaidAmountType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.PaidDateType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.SourceCurrencyCodeType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.TargetCurrencyCodeType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.TotalInvoiceAmountType;
import sunat.names.specification.ubl.peru.schema.xsd.sunataggregatecomponents_1.SunatNetTotalPaidType;
import sunat.names.specification.ubl.peru.schema.xsd.sunataggregatecomponents_1.SunatRetentionAmountType;
import sunat.names.specification.ubl.peru.schema.xsd.sunataggregatecomponents_1.SunatRetentionDateType;
import sunat.names.specification.ubl.peru.schema.xsd.sunataggregatecomponents_1.SunatRetentionInformationType;



/**
 * 
 * <pre>
 * &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;ccts:Component xmlns:ccts="urn:un:unece:uncefact:documentation:2" xmlns="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2" xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2" xmlns:qdt="urn:oasis:names:specification:ubl:schema:xsd:QualifiedDatatypes-2" xmlns:udt="urn:un:unece:uncefact:data:specification:UnqualifiedDataTypesSchemaModule:2" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;ccts:ComponentType&gt;ABIE&lt;/ccts:ComponentType&gt;&lt;ccts:DictionaryEntryName&gt;Document Reference. Details&lt;/ccts:DictionaryEntryName&gt;&lt;ccts:Definition&gt;Information about a document referred to in another document.&lt;/ccts:Definition&gt;&lt;ccts:ObjectClass&gt;Document Reference&lt;/ccts:ObjectClass&gt;

 *         &lt;/ccts:Component&gt;
 * </pre>
 * 
 *       
 * 
 * <p>Java class for DocumentReferenceType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DocumentReferenceType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}ID"/>
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}CopyIndicator" minOccurs="0"/>
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}UUID" minOccurs="0"/>
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}IssueDate" minOccurs="0"/>
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}DocumentTypeCode" minOccurs="0"/>
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}DocumentType" minOccurs="0"/>
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}XPath" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2}Attachment" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SunatRetentionDocumentReferenceType", propOrder = {
    "id",
    "issueDate",
    "totalInvoiceAmount",
    "payment",
    "sunatRetentionInformation"
})
public class SunatRetentionDocumentReferenceType {

    @XmlElement(name = "ID", namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2", required = true)
    protected IDType id;
    @XmlElement(name = "IssueDate", namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2")
    protected IssueDateType issueDate;
    @XmlElement(name = "TotalInvoiceAmount", namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2")
    protected TotalInvoiceAmountType totalInvoiceAmount;
    @XmlElement(name = "Payment", namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2")
    protected PaymentType payment;
    @XmlElement(name = "SUNATRetentionInformation", namespace = MyNamespacePrefixMapper.SAC_URI)
    protected SunatRetentionInformationType sunatRetentionInformation;
    
	public IDType getId() {
		return id;
	}
	public void setId(IDType id) {
		this.id = id;
	}
	public IssueDateType getIssueDate() {
		return issueDate;
	}
	public void setIssueDate(IssueDateType issueDate) {
		this.issueDate = issueDate;
	}
	public TotalInvoiceAmountType getTotalInvoiceAmount() {
		return totalInvoiceAmount;
	}
	public void setTotalInvoiceAmount(TotalInvoiceAmountType totalInvoiceAmount) {
		this.totalInvoiceAmount = totalInvoiceAmount;
	}
	public PaymentType getPayment() {
		return payment;
	}
	public void setPayment(PaymentType payment) {
		this.payment = payment;
	}
	public SunatRetentionInformationType getSunatRetentionInformation() {
		return sunatRetentionInformation;
	}
	public void setSunatRetentionInformation(
			SunatRetentionInformationType sunatRetentionInformation) {
		this.sunatRetentionInformation = sunatRetentionInformation;
	}
	
	//INI - HNA: inserts para el tag ExchangeRateType (condicional)
	public void insertSourceCurrencyCodeType(SourceCurrencyCodeType value) {
			if(value == null) return;
			getSunatRetentionInformation().getExchangeRate().setSourceCurrencyCode(value);
	}
	
	public void insertTargetCurrencyCodeType(TargetCurrencyCodeType value) {
		if(value == null) return;
		getSunatRetentionInformation().getExchangeRate().setTargetCurrencyCode(value);
	}
	
	public void insertCalculationRateType(CalculationRateType value) {
		if(value == null) return;
		getSunatRetentionInformation().getExchangeRate().setCalculationRate(value);
	}
	
	public void insertDateType(DateType value) {
		if(value == null) return;
		getSunatRetentionInformation().getExchangeRate().setDate(value);
	}
	//FIN - HNA: inserts para el tag ExchangeRateType (condicional)
	
    public void insertSunatRetentionAmount(SunatRetentionAmountType retAmount){
    	if(retAmount == null) return;
    	if(getSunatRetentionInformation() == null){   
    		SunatRetentionInformationType sriType = new SunatRetentionInformationType();
    		sriType.setSunatRetentionAmount(retAmount);
    		this.setSunatRetentionInformation(sriType);
    	} else {
    		this.getSunatRetentionInformation().setSunatRetentionAmount(retAmount);
    	}
    }
    
    public void insertSunatRetentionDate(SunatRetentionDateType retDate){
    	if(retDate == null) return;
    	if(getSunatRetentionInformation() == null){   
    		SunatRetentionInformationType sriType = new SunatRetentionInformationType();
    		sriType.setSunatRetentionDate(retDate);
    		this.setSunatRetentionInformation(sriType);
    	} else {
    		this.getSunatRetentionInformation().setSunatRetentionDate(retDate);
    	}
    }
    
    public void insertSunatNetTotalPaid(SunatNetTotalPaidType netTotal){
    	if(netTotal == null) return;
    	if(getSunatRetentionInformation() == null){   
    		SunatRetentionInformationType sriType = new SunatRetentionInformationType();
    		sriType.setSunatNetTotalPaid(netTotal);
    		this.setSunatRetentionInformation(sriType);
    	} else {
    		this.getSunatRetentionInformation().setSunatNetTotalPaid(netTotal);
    	}
    }
    
    public void insertPaidDate(PaidDateType paidDate){
    	if(paidDate == null) return;    	
    	if(getPayment() == null){   
    		PaymentType pType = new PaymentType();
    		pType.setPaidDate(paidDate);
    		this.setPayment(pType);
    	} else {
    		getPayment().setPaidDate(paidDate);
    	}
    }

    public void insertIDType(IDType idType){
    	if(idType == null) return;
    	if(getPayment() == null){   
    		PaymentType pType = new PaymentType();
    		pType.setID(idType);
    		this.setPayment(pType);
    	} else {
    		this.getPayment().setID(idType);
    	}        
    }

    public void insertPaidAmount(PaidAmountType paidAmount){
    	if(paidAmount == null) return;
    	if(getPayment() == null){   
    		PaymentType pType = new PaymentType();
    		pType.setPaidAmount(paidAmount);
    		this.setPayment(pType);
    	} else {
    		this.getPayment().setPaidAmount(paidAmount);
    	}
    }
}
